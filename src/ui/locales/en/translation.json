{
  "appTitle": "Barbated - Barcode Battler II Editor",
  "barcodeInputLabel": "Enter Barcode:",
  "parseButton": "Parse Barcode",
  "showExplanationsLabel": "Show Explanations",
  "errorPrefix": "Error:",
  "true": "Yes",
  "false": "No",
  "barcodeInvalidLength": "Barcode must be 8 (EAN-8) or 13 (UPC-A/EAN-13) digits long.",
  "barcodeInvalidChars": "Barcode must contain only digits.",
  "barcodeInvalidChecksum": "Invalid checksum.",
  "barcodeUnknownError": "An unknown error occurred during parsing.",
  "cardPropertiesTitle": "Card Properties:",
  "parsingDetailsTitle": "Parsing Details:",
  "tableHeaderField": "Field",
  "tableHeaderValue": "Value",
  "tableHeaderExplanation": "Explanation",
  "fieldLabelBarcode": "Barcode",
  "fieldLabelIsValid": "Is Valid?",
  "fieldLabelError": "Error",
  "fieldLabelMethodUsed": "Parsing Method",
  "fieldLabelReason": "Method Reason",
  "fieldLabelCardType": "Card Type",
  "fieldLabelPowerUpType": "PowerUp Type",
  "fieldLabelHp": "HP",
  "fieldLabelSt": "ST (Strength)",
  "fieldLabelDf": "DF (Defense)",
  "fieldLabelDx": "DX (Speed)",
  "fieldLabelPp": "PP (Power Points)",
  "fieldLabelMp": "MP (Magic Points)",
  "fieldLabelRace": "Race",
  "fieldLabelOccupation": "Occupation",
  "fieldLabelFlag": "Flag",
  "fieldLabelIsHero": "Is Hero?",
  "fieldLabelIsSingleUse": "Is Single Use?",
  "explanationBarcode": "The original barcode string entered.",
  "explanationIsValid": "Indicates if the barcode was successfully parsed according to known rules.",
  "explanationError": "Details about any error encountered during parsing.",
  "explanationMethodUsed": "The internal parsing method (1 or 2) used, or 'Exception' for hardcoded values.",
  "explanationReason": "Explanation of why a specific parsing method was chosen or if it was an exception.",
  "noExplanationAvailable": "No explanation available.",
  "unsupportedValueType": "Unsupported value type",

  "reasonMethod1Met": "Method 1 criteria met.",
  "reasonMethod1Rejected": "Method 1 rejected: A ({{A}}) > 2 AND (C ({{C}}) < 9 OR J ({{J}}) != 5). Using Method 2.",
  "reasonMethod2Ean8": "EAN-8 barcode always uses Method 2.",
  "reasonExceptionEpoch": "Epoch Product Barcode ({{productName}})",
  "reasonExceptionOriginalHero": "Original Hero Backward Compatibility ({{heroName}})",

  "explanationHpMethod1": "HP ({{hp}}) = A({{A}})*10000 + B({{B}})*1000 + C({{C}})*100. Digits: [0, 1, 2].",
  "explanationStBaseMethod1": "Base ST = D({{D}})*1000 + E({{E}})*100.",
  "explanationDfBaseMethod1": "Base DF = F({{F}})*1000 + G({{G}})*100.",
  "explanationStMethod1Char": "ST ({{st}}) = (Base {{baseSt}}) + {{stAddition}}. Since A({{A}}) > 2: {{additionExplanation}}. Digits: [{{indices}}].",
  "explanationDfMethod1Char": "DF ({{df}}) = (Base {{baseDf}}) + {{dfAddition}}. Since A({{A}}) > 2: {{additionExplanation}}. Digits: [{{indices}}].",
  "explanationStMethod1Weapon": "ST ({{st}}) = (Base {{baseSt}}) + {{stAddition}}. Since A({{A}}) > 2: {{additionExplanation}}. Digits: [{{indices}}].",
  "explanationDfMethod1Weapon": "DF (0) is not applicable for Weapons. Base was {{baseDf}}.",
  "explanationHpMethod1WeaponArmour": "HP (0) is not applicable for {{cardType}}. Base was {{baseHp}}.",
  "explanationDfMethod1Armour": "DF ({{df}}) = (Base {{baseDf}}) + {{dfAddition}}. Since A({{A}}) > 2: {{additionExplanation}}. Digits: [{{indices}}].",
  "explanationStMethod1Armour": "ST (0) is not applicable for Armour. Base was {{baseSt}}.",
  "explanationDxMethod1": "DX/Speed ({{dx}}) = J({{J}}). Digit: [9].",
  "explanationFlagMethod1": "Flag ({{flag}}) = K({{K}})*10 + L({{L}}). Digits: [10, 11].",
  "explanationRaceMethod1": "Race ({{race}}) = H({{H}}). Digit: [7].",
  "explanationOccupationMethod1": "Occupation ({{occupation}}) = I({{I}}). Digit: [8].",
  "explanationCardTypeMethod1Char": "Card type determined by H({{H}}). Since H is 0-4, it's a Character. I({{I}}) >= 7 makes it a {{cardType}}. Digits: [7, 8].",
  "explanationCardTypeMethod1Weapon": "Card type determined by H({{H}}). Since H is 5 or 6, it's a Weapon. Digits: [7].",
  "explanationCardTypeMethod1Armour": "Card type determined by H({{H}}). Since H is 7 or 8, it's an Armour. Digits: [7].",
  "explanationCardTypeMethod1PowerUp": "Card type determined by H({{H}}). Since H is 9, it's a PowerUp. Type determined by I({{I}}). Digits: [7, 8].",
  "explanationPpMethod1": "PP ({{pp}}) is fixed at 5 for Method 1 Characters.",
  "explanationMpMethod1": "MP ({{mp}}) = I({{I}}) >= 6 ? 10 : 0. Digit: [8].",
  "explanationSingleUseMethod1": "Single Use ({{isSingleUse}}) = H({{H}}) === {{value}}. Digit: [7].",
  "explanationPowerUpTypeMethod1": "PowerUp Type ({{powerUpType}}) determined by I({{I}}). Digit: [8].",
  "explanationStMethod1HealthPowerUp": "ST (0) is not applicable for Health PowerUp. Base was {{baseSt}}.",
  "explanationDfMethod1HealthPowerUp": "DF (0) is not applicable for Health PowerUp. Base was {{baseDf}}.",
  "explanationHpMethod1NewsPowerUp": "HP (0) is not applicable for News PowerUp. Base was {{baseHp}}.",
  "explanationStMethod1NewsPowerUp": "ST (0) is not applicable for News PowerUp. Base was {{baseSt}}.",
  "explanationDfMethod1NewsPowerUp": "DF (0) is not applicable for News PowerUp. Base was {{baseDf}}.",
  "explanationPpMethod1Herb": "Herb PP ({{pp}}) = D({{D}})*100 + E({{E}}). Digits: [3, 4].",
  "explanationHpMethod1HerbPowerUp": "HP (0) is not applicable for Herb PowerUp. Base was {{baseHp}}.",
  "explanationStMethod1HerbPowerUp": "Digits D({{D}}), E({{E}}) used for PP in Herb PowerUp. Base ST calc was {{baseSt}}.",
  "explanationDfMethod1HerbPowerUp": "DF (0) is not applicable for Herb PowerUp. Base was {{baseDf}}.",
  "explanationMpMethod1Magic": "Magic MP ({{mp}}) = F({{F}})*100 + G({{G}}). Digits: [5, 6].",
  "explanationHpMethod1MagicPowerUp": "HP (0) is not applicable for Magic PowerUp. Base was {{baseHp}}.",
  "explanationStMethod1MagicPowerUp": "ST (0) is not applicable for Magic PowerUp. Base was {{baseSt}}.",
  "explanationDfMethod1MagicPowerUp": "Digits F({{F}}), G({{G}}) used for MP in Magic PowerUp. Base DF calc was {{baseDf}}.",
  "explanationIsHeroMethod1": "Is Hero ({{isHero}}) = (Flag({{flag}}) is 19 or 50) AND HP({{hp}}) < 6000 AND ST({{st}}) < 2000 AND DF({{df}}) < 2000. Checked Digits: [{{indices}}].",

  "explanationDxMethod2": "DX/Speed ({{dx}}) is always 0 in Method 2.",
  "explanationFlagMethod2": "Flag ({{flag}}) = P({{P}})*10 + R({{R}}). Digits: [{{pIdx}}, {{rIdx}}].",
  "explanationFlagMethod2Adjusted": "Flag ({{flag}}) = P({{P}})*10 + R({{R}}). Adjusted to 0 because original flag ({{originalFlag}}) > 29 and T({{T}}) >= 5. Digits: [{{pIdx}}, {{rIdx}}, {{tIdx}}].",
  "explanationCardTypeMethod2Hero": "Card type determined by T({{T}}). Since T < 5, it's a Character (Hero). Digit: [{{tIdx}}].",
  "explanationHpMethod2Hero": "HP ({{hp}}) = (1000 * (10 * floor(S({{S}})/2) + R({{R}}))) + (100 * Q({{Q}})). Digits: [{{qIdx}}, {{rIdx}}, {{sIdx}}].",
  "explanationStMethod2Hero": "ST ({{st}}) = 1000 * ((R({{R}}) + 5) % 10 + 2) + 100 * ((Q({{Q}}) + 5) % 10). Digits: [{{qIdx}}, {{rIdx}}].",
  "explanationDfMethod2Hero": "DF ({{df}}) = 1000 * ((Q({{Q}}) + 7) % 10) + 100 * ((P({{P}}) + 7) % 10). Digits: [{{pIdx}}, {{qIdx}}].",
  "explanationFlagMethod2Hero": "Flag ({{flag}}) is set to 50 because T({{T}}) < 5 (Method 2 Hero). Original calculated flag was {{originalFlag}}. Digit: [{{tIdx}}].",
  "explanationIsHeroMethod2": "Is Hero ({{isHero}}) is true because T({{T}}) < 5. Digit: [{{tIdx}}].",
  "explanationCardTypeMethod2Weapon": "Card type determined by T({{T}}). Since T is 5 or 6, it's a Weapon. Digit: [{{tIdx}}].",
  "explanationStMethod2Weapon": "ST ({{st}}) = 1000 * (1 + floor(R({{R}}) / 4)) + 100 * ((Q({{Q}}) + 5) % 10). Digits: [{{qIdx}}, {{rIdx}}].",
  "explanationSingleUseMethod2Weapon": "Single Use ({{isSingleUse}}) = T({{T}}) === 5. Digit: [{{tIdx}}].",
  "explanationHpMethod2Weapon": "HP (0) is not applicable for Method 2 Weapons.",
  "explanationDfMethod2Weapon": "DF (0) is not applicable for Method 2 Weapons.",
  "explanationCardTypeMethod2Armour": "Card type determined by T({{T}}). Since T is 7 or 8, it's an Armour. Digit: [{{tIdx}}].",
  "explanationDfMethod2Armour": "DF ({{df}}) = 1000 * floor(Q({{Q}}) / 4) + 100 * ((P({{P}}) + 7) % 10). Digits: [{{pIdx}}, {{qIdx}}].",
  "explanationSingleUseMethod2Armour": "Single Use ({{isSingleUse}}) = T({{T}}) === 7. Digit: [{{tIdx}}].",
  "explanationHpMethod2Armour": "HP (0) is not applicable for Method 2 Armour.",
  "explanationStMethod2Armour": "ST (0) is not applicable for Method 2 Armour.",
  "explanationCardTypeMethod2PowerUp": "Card type determined by T({{T}}). Since T > 8, it's a Health PowerUp. Digit: [{{tIdx}}].",
  "explanationPowerUpTypeMethod2": "PowerUp Type ({{powerUpType}}) is Health because T({{T}}) > 8. Digit: [{{tIdx}}].",
  "explanationHpMethod2PowerUp": "PowerUp HP ({{hp}}) = 10000 * floor(S({{S}}) / 8) + 1000 * R({{R}}) + 100 * Q({{Q}}). Digits: [{{qIdx}}, {{rIdx}}, {{sIdx}}].",
  "explanationStMethod2PowerUp": "ST (0) is not applicable for Method 2 PowerUps.",
  "explanationDfMethod2PowerUp": "DF (0) is not applicable for Method 2 PowerUps.",

  "flagEffects": {
    "0": "No Ability",
    "1": "Increased Damage to Occ 1 (300%)",
    "2": "Increased Damage to Occ 2 (300%)",
    "3": "Increased Damage to Occ 3 (300%)",
    "4": "Increased Damage to Occ 4 (300%)",
    "5": "Increased Damage to Occ 5 (300%)",
    "6": "Increased Damage to Occ 6 (300%)",
    "7": "Increased Damage to Occ 7 (300%)",
    "8": "Increased Damage to Occ 8 (300%)",
    "9": "Increased Damage to Occ 9 (300%)",
    "10": "Increased Damage to Occ 0 (300%)",
    "11": "Increased Damage to Race 1 (300%)",
    "12": "Increased Damage to Race 2 (300%)",
    "13": "Increased Damage to Race 3 (300%)",
    "14": "Increased Damage to Race 4 (300%)",
    "15": "Increased Damage to Race 0 (300%)",
    "16": "Decrease Own ST (50%)",
    "17": "Increase Own ST (150%)",
    "18": "Increase Own ST (200%)",
    "19": "Hero (Method 1?)",
    "20": "Increase Own DF (110%)",
    "21": "Increase Own DF (130%)",
    "22": "Increase Own DF (150%)",
    "23": "Decrease Opponent ST (70%)",
    "24": "Decrease Opponent ST (50%)",
    "25": "Decrease Opponent DF (70%)",
    "26": "Decrease Opponent DF (50%)",
    "27": "Decrease Opponent DF (30%)",
    "28": "Decrease Opponent HP (70%)",
    "29": "Decrease Opponent HP (50%)",
    "30": "Subtracts HP Value Instead of Adding (50% Chance)",
    "31": "Subtracts ST Value Instead of Adding (50% Chance)",
    "32": "Subtracts DF Value Instead of Adding (50% Chance)",
    "37": "Increase Own Accuracy (1 turn, ~90%)",
    "38": "Increase Own Accuracy (~90%)",
    "39": "Increase Opponent Accuracy (~90%)",
    "40": "Decrease Own Accuracy (~20%)",
    "41": "Decrease Opponent Accuracy (~20%)",
    "43": "Decrease Opponent HP Recovery (50%)",
    "44": "Increase Own HP Recovery (200%)",
    "45": "Disable Opponent Flag",
    "50": "Hero (Method 2?)",
    "65": "Rewards Player +1000 HP (C2)",
    "66": "Rewards Player +3000 HP (C2)",
    "67": "Rewards Player +4000 HP (C2)",
    "68": "Rewards Player +5000 HP (C2)",
    "69": "Rewards Player +10000 HP (C2 Mode)",
    "70": "Rewards Player +200 ST (C2 Mode)",
    "71": "Rewards Player +400 ST (C2 Mode)",
    "72": "Rewards Player +600 ST (C2 Mode)",
    "73": "Rewards Player +800 ST (C2 Mode)",
    "74": "Rewards Player +1000 ST (C2 Mode)",
    "75": "Rewards Player +200 DF (C2 Mode)",
    "76": "Rewards Player +400 DF (C2 Mode)",
    "77": "Rewards Player +600 DF (C2 Mode)",
    "78": "Rewards Player +800 DF (C2 Mode)",
    "79": "Rewards Player +1000 DF (C2 Mode)",
    "80": "Rewards Player with Passcode 05 (C2 Mode)",
    "81": "Rewards Player with Passcode 10 (C2 Mode)",
    "82": "Rewards Player with Passcode 15 (C2 Mode)",
    "83": "Rewards Player with Passcode 20 (C2 Mode)",
    "84": "Rewards Player with Passcode 25 (C2 Mode)",
    "85": "Rewards Player with Passcode 35 (C2 Mode)",
    "86": "Rewards Player with Passcode 36 (C2 Mode)",
    "87": "Rewards Player with Passcode 37 (C2 Mode)",
    "88": "Rewards Player with Passcode 38 (C2 Mode)",
    "89": "Rewards Player with Passcode 39 (C2 Mode)",
    "90": "Rewards Player with Passcode 40 (C2 Mode)",
    "91": "Rewards Player with Passcode 41 (C2 Mode)",
    "92": "Rewards Player with Passcode 42 (C2 Mode)",
    "93": "Rewards Player with Passcode 43 (C2 Mode)",
    "94": "Rewards Player with Passcode 44 (C2 Mode)",
    "95": "Rewards Player with Passcode 45 (C2 Mode)",
    "96": "Rewards Player with Passcode 46 (C2 Mode)",
    "97": "Rewards Player with Passcode 47 (C2 Mode)",
    "98": "Rewards Player with Passcode 48 (C2 Mode)",
    "99": "Rewards Player with Passcode 49 (C2 Mode)"
  }
}
